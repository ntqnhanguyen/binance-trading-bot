# ============================================================================
# BINANCE TRADING BOT - ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env and update with your actual values
# Command: cp .env.example .env
# ============================================================================

# ----------------------------------------------------------------------------
# BINANCE API CONFIGURATION
# ----------------------------------------------------------------------------

# Mainnet API Keys (Real Trading - USE WITH CAUTION!)
# Get from: https://www.binance.com/en/my/settings/api-management
# Permissions needed: Enable Spot & Margin Trading (DO NOT enable Withdrawals)
BINANCE_API_KEY=your_mainnet_api_key_here
BINANCE_API_SECRET=your_mainnet_api_secret_here

# Testnet API Keys (Test Trading - Safe for testing)
# Get from: https://testnet.binance.vision/
# Free test funds available
BINANCE_TESTNET_API_KEY=your_testnet_api_key_here
BINANCE_TESTNET_API_SECRET=your_testnet_api_secret_here

# ----------------------------------------------------------------------------
# TRADING MODE
# ----------------------------------------------------------------------------
# Options:
#   - backtest: Test strategies on historical data (no API needed)
#   - paper: Simulate trading with real-time data (API for data only)
#   - testnet: Trade on Binance testnet (requires testnet API keys)
#   - mainnet: REAL TRADING with real money (requires mainnet API keys)
# 
# RECOMMENDATION: Start with backtest -> paper -> testnet -> mainnet
TRADING_MODE=paper

# ----------------------------------------------------------------------------
# RISK MANAGEMENT SETTINGS
# ----------------------------------------------------------------------------
# These override the defaults in config/risk_limits.yaml

# Maximum risk per single trade (as decimal, e.g., 0.005 = 0.5%)
MAX_RISK_PER_TRADE=0.005

# Maximum daily loss before circuit breaker activates (as decimal, e.g., 0.02 = 2%)
MAX_DAILY_LOSS=0.02

# Maximum weekly loss before circuit breaker activates (as decimal, e.g., 0.05 = 5%)
MAX_WEEKLY_LOSS=0.05

# Minimum cash reserve to maintain (as decimal, e.g., 0.30 = 30%)
MIN_CASH_RESERVE=0.30

# Maximum number of concurrent open positions
MAX_POSITIONS=7

# Maximum number of strategies per trading pair
MAX_STRATEGIES_PER_PAIR=2

# ----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# ----------------------------------------------------------------------------

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Enable file logging
LOG_TO_FILE=true

# Enable console logging
LOG_TO_CONSOLE=true

# Maximum log file size in MB (before rotation)
LOG_MAX_FILE_SIZE_MB=10

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# ----------------------------------------------------------------------------
# TRADING CONFIGURATION (Optional - can also use config/config.yaml)
# ----------------------------------------------------------------------------

# Trading symbols (comma-separated)
# TRADING_SYMBOLS=BTCUSDT,ETHUSDT,BNBUSDT

# Trading interval in seconds (e.g., 300 = 5 minutes)
# TRADING_INTERVAL=300

# Timeframe for analysis (1m, 5m, 15m, 1h, 4h, 1d)
# TRADING_TIMEFRAME=15m

# ----------------------------------------------------------------------------
# TELEGRAM NOTIFICATIONS (Optional - Future Feature)
# ----------------------------------------------------------------------------

# Telegram bot token (get from @BotFather)
TELEGRAM_BOT_TOKEN=

# Telegram chat ID (your user ID or group ID)
TELEGRAM_CHAT_ID=

# Enable Telegram notifications
TELEGRAM_ENABLED=false

# ----------------------------------------------------------------------------
# DATABASE CONFIGURATION (Optional - Future Feature)
# ----------------------------------------------------------------------------

# Database URL for storing trade history
# SQLite (default): sqlite:///data/trades.db
# PostgreSQL: postgresql://user:password@localhost/dbname
# MySQL: mysql://user:password@localhost/dbname
DATABASE_URL=sqlite:///data/trades.db

# Enable database logging
DATABASE_ENABLED=false

# ----------------------------------------------------------------------------
# BACKTEST CONFIGURATION (Optional - can also use command line args)
# ----------------------------------------------------------------------------

# Initial capital for backtesting
BACKTEST_INITIAL_CAPITAL=10000.0

# Backtest start date (YYYY-MM-DD)
BACKTEST_START_DATE=2023-01-01

# Backtest end date (YYYY-MM-DD)
BACKTEST_END_DATE=2023-12-31

# Commission rate (as decimal, e.g., 0.001 = 0.1%)
BACKTEST_COMMISSION=0.001

# ----------------------------------------------------------------------------
# ADVANCED SETTINGS (Optional)
# ----------------------------------------------------------------------------

# Enable debug mode (more verbose logging)
DEBUG_MODE=false

# Dry run mode (log trades but don't execute - even in mainnet)
DRY_RUN=false

# API request timeout in seconds
API_TIMEOUT=30

# Maximum retries for failed API requests
API_MAX_RETRIES=3

# ----------------------------------------------------------------------------
# SECURITY NOTES
# ----------------------------------------------------------------------------
# 1. NEVER commit this file with real API keys to version control
# 2. Keep your API keys secure and private
# 3. Use IP whitelist on Binance for additional security
# 4. Only enable necessary permissions (NO withdrawals!)
# 5. Start with small amounts on mainnet
# 6. Monitor your bot regularly
# 7. Use strong, unique API keys
# 8. Rotate API keys periodically
# ----------------------------------------------------------------------------

